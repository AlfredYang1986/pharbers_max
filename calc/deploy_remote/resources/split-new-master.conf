akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "10.27.223.92"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://calc@10.27.223.92:2551"
    ]
    roles = ["splitmaster"]
    auto-down = on

    role {
      splitmaster.min-nr-of-members = 1
      splitcalcymslave.min-nr-of-members = 1
      splitgeneratepanelslave.min-nr-of-members = 1
      splitsplitpanelslave.min-nr-of-members = 1
      splitgroupslave.min-nr-of-members = 1
      splitcalcslave.min-nr-of-members = 1
      splitrestorebsonslave.min-nr-of-members = 1
    }

    # how often should the node send out gossip information?
    gossip-interval = 10s

    # discard incoming gossip messages if not handled within this duration
    gossip-time-to-live = 20s

    # how often should the leader perform maintenance tasks?
    leader-actions-interval = 10s
  }
}
